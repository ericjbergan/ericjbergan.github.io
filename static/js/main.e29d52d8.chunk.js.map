{"version":3,"sources":["components/Navbar/Navbar.js","components/Project/Project.js","App.js","serviceWorker.js","index.js"],"names":["navbar","props","class","src","className","alt","onClick","click","href","target","rel","projects","name","imageURL","description","runApp","seeCode","Projects","map","card","type","App","state","isAboutMe","switchAboutMe","setState","this","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uTAuCeA,G,YApCA,SAACC,GAEd,OACE,6BACE,wBAAIC,MAAM,iBACR,4BACE,yBAAKC,IAAK,aAAcC,UAAU,OAAOC,IAAI,UAE/C,4BACE,yBAAKF,IAAK,uBAAwBC,UAAU,QAAQC,IAAI,WAE1D,4BACE,wBAAID,UAAU,YAAW,eACzB,wBAAIA,UAAU,aAAY,yBAE5B,wBAAIA,UAAU,kBACZ,uBAAGA,UAAU,WAAWE,QAASL,EAAMM,OAAO,aAEhD,wBAAIH,UAAU,YACZ,uBAAGA,UAAU,WAAWI,KAAK,iCAAiCC,OAAO,SAASC,IAAI,uBAAsB,WAE1G,wBAAIN,UAAU,YACZ,uBAAGA,UAAU,WAAWI,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBAAsB,aAEpH,wBAAIN,UAAU,YACZ,uBAAGA,UAAU,WAAWI,KAAK,qFAAqFC,OAAO,SAASC,IAAI,uBAAsB,WAE9J,wBAAIN,UAAU,YACZ,uBAAGA,UAAU,WAAWI,KAAK,iCAAgC,gBC5BjEG,G,MAAW,CACb,CACIC,KAAM,cACNC,SAAU,mBACVC,YAAa,uHAEbC,OAAQ,sDACRC,QAAS,uDAEb,CACIJ,KAAM,gBACNC,SAAU,qBACVC,YAAa,+FACbC,OAAQ,6DACRC,QAAS,8DAEb,CACIJ,KAAM,eACNC,SAAU,qBACVC,YAAa,uHAEbC,OAAQ,mDACRC,QAAS,sDA2BFC,EAtBE,WAEd,OAAON,EAASO,KAAI,SAAAC,GACf,OACI,yBAAKf,UAAU,gBACX,yBAAKA,UAAU,WACX,yBAAKD,IAAKgB,EAAKN,SAAUR,IAAI,GAAGD,UAAU,eAC1C,yBAAKA,UAAU,gBACX,uBAAGI,KAAMW,EAAKJ,OAAQN,OAAO,SAASC,IAAI,uBACtC,4BAAQU,KAAK,UAAS,YAC1B,uBAAGZ,KAAMW,EAAKH,QAASP,OAAO,SAASC,IAAI,uBACvC,4BAAQU,KAAK,SAAShB,UAAU,UAAS,eAGrD,yBAAKA,UAAU,YACX,uBAAGA,UAAU,gBAAgBe,EAAKL,mBCevCO,EAvDN,iKAUL,OAVK,oCACPC,MAAQ,CACNC,WAAW,GACX,EAEFC,cAAgB,WAEd,EAAKC,SAAS,CACZF,WAAY,EAAKD,MAAMC,aAE1B,EA0CA,OA1CA,mCAED,WACE,OACE,yBAAKnB,UAAU,iBACb,kBAAC,EAAM,CAACG,MAAOmB,KAAKF,gBAEpB,yBAAKG,GAAG,QACLD,KAAKJ,MAAMC,UACV,6BACE,4BAAI,sCACJ,4BAAI,oCAGN,6BACE,6BACE,yBAAKpB,IAAI,oBAAoBE,IAAI,cAAcD,UAAU,mBAE3D,6BACE,uBAAGA,UAAU,OAAM,yMAInB,uBAAGA,UAAU,OAAM,sdAMnB,uBAAGA,UAAU,OAAM,wVAQzB,6BACE,kBAAC,EAAO,YAIjB,EApDM,CAASwB,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e29d52d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst navbar = (props) => {\r\n\r\n  return (\r\n    <nav>\r\n      <ul class=\"nav-container\">\r\n        <li>\r\n          <img src={'./logo.jpg'} className=\"logo\" alt=\"logo\"></img>\r\n        </li>\r\n        <li>\r\n          <img src={'./bootcamp-badge.png'} className=\"badge\" alt=\"badge\" />\r\n        </li>\r\n        <li>\r\n          <h2 className=\"nav-name\">Eric Bergan</h2>\r\n          <h3 className=\"nav-title\">Full Stack Developer</h3>\r\n        </li>\r\n        <li className=\"nav-item about\">\r\n          <p className=\"nav-link\" onClick={props.click}>About Me</p>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"https://github.com/ericjbergan\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"https://www.linkedin.com/in/eric-bergan/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"https://drive.google.com/file/d/1M0arQXR9ouHr8fAeIFoCUsrKBQFOf7oS/view?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Resume</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"mailto: ericjbergan@gmail.com\">Contact</a>\r\n        </li>\r\n\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nimport './Project.css';\r\n\r\nconst projects = [\r\n    {\r\n        name: \"Clicky Game\",\r\n        imageURL: \"./ClickyGame.JPG\",\r\n        description: \"Simple React app that tests your memory and observation skills. This was my first React app \" +\r\n            \"other than this profile.\",\r\n        runApp: \"https://ericjbergan.github.io/clickygame.github.io/\",\r\n        seeCode: \"https://github.com/ericjbergan/clickygame.github.io\"\r\n    },\r\n    {\r\n        name: \"Gem Collector\",\r\n        imageURL: \"./gemcollector.jpg\",\r\n        description: \"A game for improving basic math and memory skills. It uses lots of RNG for such a small app.\",\r\n        runApp: \"https://ericjbergan.github.io/crystal-collector.github.io/\",\r\n        seeCode: \"https://github.com/ericjbergan/crystal-collector.github.io\"\r\n    },\r\n    {\r\n        name: \"Oregon Trail\",\r\n        imageURL: \"./oregontrail.jpeg\",\r\n        description: \"A conversion of an old CLI Basic language version of Oregon Trail to modern Java. Must be cloned \" +\r\n            \"in order to run it.\",\r\n        runApp: \"https://github.com/ericjbergan/oregon-trail-java\",\r\n        seeCode: \"https://github.com/ericjbergan/oregon-trail-java\"\r\n    }\r\n];\r\n\r\n\r\nconst Projects = () => {\r\n\r\n   return projects.map(card => {\r\n        return (\r\n            <div className=\"project-card\">\r\n                <div className=\"img-div\">\r\n                    <img src={card.imageURL} alt=\"\" className=\"projectImg\"></img>\r\n                    <div className=\"link-wrapper\">\r\n                        <a href={card.runApp} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <button type=\"button\">Run App</button></a>\r\n                        <a href={card.seeCode} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <button type=\"button\" className=\"runApp\">See Code</button></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"desc-div\">\r\n                    <p className=\"project-desc\">{card.description}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Project from './components/Project/Project';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isAboutMe: true\r\n  };\r\n\r\n  switchAboutMe = () => {\r\n    //update state\r\n    this.setState({\r\n      isAboutMe: !this.state.isAboutMe\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <Navbar click={this.switchAboutMe}\r\n        />\r\n        <div id=\"body\">\r\n          {this.state.isAboutMe ?\r\n            <div>\r\n              <h1>Hi, I'm Eric; Full Stack Developer</h1>\r\n              <h1>located in the Seattle, WA area</h1>\r\n            </div>\r\n            :\r\n            <div>\r\n              <div>\r\n                <img src=\"./profile-pic.jpg\" alt=\"profile pic\" className=\"profile-image\"></img>\r\n              </div>\r\n              <div>\r\n                <p className=\"bio\">After some time in the medical and donation industries, I decided to take on a\r\n                    new challenge. Coding is something that has always been an interest for me so web development\r\n                    was a logical next step.</p>\r\n\r\n                <p className=\"bio\">I recently completed a year long bootcamp that is a collaboration between Amazon\r\n                    Technical Academy (ATA) and Kenzie Academy (part of Southern NH Univ). This focused on Java and\r\n                    Amazon Web Services (AWS). During that time, I was hired by Kenzie to be a Java coach for that\r\n                    same program. Also, in 2019 I completed the University of MN Coding Bootcamp where learned HTML,\r\n                    Javascript, CSS, React.js, MongoDB, MySQL, and many other programming languages and applications.</p>\r\n\r\n                <p className=\"bio\">I am friendly, open, intelligent and I love a good challenge. Iâ€™m excited about\r\n                    the prospect of going into a job where I can build web applications that fill a need. I want to\r\n                    continue to learn and grow my coding skills to the point where I can teach and mentor other new\r\n                    full stack developers through their own learning and growth.</p>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n          <div>\r\n            <Project />\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}